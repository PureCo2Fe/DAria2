#if 0
	shc Version 4.0.3, Generic Shell Script Compiler
	GNU GPL Version 3 Md Jahidul Hamid <jahidulhamid@yahoo.com>

	shc -f /content/Erovoice.sh -o binary 
#endif

static  char data [] = 
#define      msg2_z	19
#define      msg2	((&data[3]))
	"\374\066\241\034\045\205\012\253\342\143\224\350\240\220\136\240"
	"\302\244\045\322\006\003\166\121\356\040"
#define      chk1_z	22
#define      chk1	((&data[31]))
	"\374\074\351\166\261\125\341\335\356\263\267\173\122\276\150\243"
	"\004\362\346\363\041\360\341\116\232\170\106\075\161"
#define      tst1_z	22
#define      tst1	((&data[59]))
	"\005\105\354\265\176\133\124\067\045\226\341\231\135\304\221\201"
	"\242\216\323\112\051\113\171\234\235\023\025\047\301\112\315"
#define      lsto_z	1
#define      lsto	((&data[86]))
	"\156"
#define      rlax_z	1
#define      rlax	((&data[87]))
	"\000"
#define      chk2_z	19
#define      chk2	((&data[92]))
	"\206\320\320\202\342\034\324\177\102\060\074\205\200\007\257\115"
	"\317\254\145\374\323\150\104\015"
#define      opts_z	1
#define      opts	((&data[112]))
	"\157"
#define      pswd_z	256
#define      pswd	((&data[140]))
	"\301\114\110\007\071\376\034\141\300\146\056\054\254\370\317\223"
	"\070\303\150\231\111\071\151\314\106\043\306\324\105\224\341\041"
	"\032\046\124\361\033\011\072\033\141\375\230\067\234\055\130\065"
	"\237\373\115\215\320\254\310\162\201\312\107\306\136\050\350\171"
	"\117\074\152\153\105\244\206\247\242\037\336\076\114\067\164\354"
	"\062\301\171\002\155\102\164\357\015\273\265\154\344\235\345\064"
	"\332\120\237\037\365\046\307\227\105\246\326\222\335\112\176\020"
	"\013\370\022\171\073\207\150\110\103\036\264\047\273\232\134\225"
	"\352\374\265\337\042\175\166\150\044\115\372\001\227\171\021\243"
	"\162\044\034\255\253\205\366\356\243\252\026\137\105\162\365\057"
	"\156\253\017\221\050\206\371\114\323\364\116\152\155\140\016\337"
	"\204\053\215\060\260\203\037\123\056\066\263\163\250\250\242\027"
	"\123\262\250\174\070\242\310\013\226\027\166\004\167\204\344\374"
	"\257\161\055\140\365\114\263\043\203\147\226\053\017\071\103\142"
	"\353\354\336\044\217\247\057\045\276\245\052\065\052\016\062\331"
	"\200\137\071\166\254\355\231\057\124\060\133\144\152\237\307\126"
	"\213\245\172\032\115\251\100\013\117\152\101\171\171\164\123\372"
	"\324\215\160\200\173\012\260\320\073\013\064\004\032\061\107\334"
	"\175\220\343\267\216\000\031\117\147\110\173\023"
#define      shll_z	10
#define      shll	((&data[413]))
	"\163\323\316\035\255\232\020\372\047\277\171"
#define      msg1_z	65
#define      msg1	((&data[425]))
	"\131\251\150\115\213\045\052\345\107\055\064\230\042\165\124\241"
	"\121\233\102\120\356\271\246\267\310\276\037\166\304\055\331\165"
	"\316\172\117\245\226\133\203\250\255\321\033\026\262\231\020\324"
	"\002\151\055\211\360\344\171\357\332\335\300\055\032\273\373\366"
	"\136\276\110"
#define      text_z	7105
#define      text	((&data[755]))
	"\237\354\222\271\035\332\225\233\152\171\122\371\171\154\110\340"
	"\264\304\364\364\017\233\155\036\252\177\170\363\373\236\202\232"
	"\212\025\124\247\357\352\103\132\143\226\123\335\002\233\276\266"
	"\137\262\253\157\116\030\216\371\230\006\354\224\244\157\056\057"
	"\204\203\327\164\155\032\316\321\260\041\257\262\275\155\150\034"
	"\040\024\214\156\055\032\150\305\041\124\132\305\303\211\365\110"
	"\014\314\274\172\346\212\114\226\253\373\110\150\150\261\205\211"
	"\305\022\370\363\054\140\270\115\265\023\023\170\234\011\301\250"
	"\325\175\043\273\010\157\122\264\152\233\035\323\115\242\135\023"
	"\264\125\006\341\265\277\057\152\322\103\343\156\114\244\027\041"
	"\042\073\335\052\252\057\336\025\312\373\351\030\236\106\053\123"
	"\233\061\065\120\360\144\273\302\250\236\061\364\103\110\026\145"
	"\203\363\220\056\043\157\103\356\152\054\006\011\162\061\135\015"
	"\142\222\136\123\366\032\025\237\270\106\223\374\217\252\141\022"
	"\236\362\101\301\141\204\260\314\261\266\325\044\350\062\062\113"
	"\305\220\236\274\252\264\133\143\372\356\137\211\230\301\234\067"
	"\263\335\370\024\142\251\340\023\362\314\231\315\102\113\344\133"
	"\346\215\021\123\252\147\325\202\350\052\041\361\004\121\276\232"
	"\323\002\372\220\366\311\372\027\112\366\303\222\276\041\174\300"
	"\174\152\372\144\023\305\234\221\062\217\121\175\270\216\317\047"
	"\202\120\231\320\351\314\231\061\054\224\107\327\211\162\270\234"
	"\214\161\365\310\141\361\201\047\236\314\044\227\330\265\133\277"
	"\213\060\214\056\235\014\227\042\031\361\172\052\221\147\326\221"
	"\015\062\224\346\101\027\333\070\351\035\041\362\355\143\205\011"
	"\213\265\330\106\341\204\213\123\024\036\362\042\263\132\253\056"
	"\256\011\333\355\141\137\140\362\366\373\131\032\076\230\123\017"
	"\133\035\346\313\105\200\175\163\236\124\302\026\320\333\055\257"
	"\164\055\215\060\025\003\235\341\255\325\025\136\346\334\133\012"
	"\212\071\076\314\167\213\116\154\007\267\013\202\207\377\031\330"
	"\244\102\210\335\252\271\301\177\316\165\343\243\065\241\312\240"
	"\072\327\170\126\175\063\076\050\034\341\200\354\011\024\102\026"
	"\115\147\111\125\134\240\111\372\220\225\203\105\322\330\307\117"
	"\320\211\361\336\265\352\022\333\064\315\256\364\063\266\072\117"
	"\110\017\042\322\243\157\255\321\205\041\304\130\343\377\265\174"
	"\261\304\306\100\043\345\271\071\230\222\352\144\004\031\326\035"
	"\320\312\077\014\045\210\112\106\207\275\050\160\127\374\101\020"
	"\233\325\210\356\310\117\253\327\265\332\035\213\165\230\263\376"
	"\167\305\001\235\055\122\117\244\015\265\147\257\336\364\230\163"
	"\307\353\374\143\174\365\356\030\322\025\011\014\144\141\101\116"
	"\351\035\137\177\172\373\225\051\344\114\316\001\073\263\002\374"
	"\355\247\345\014\344\164\245\046\127\222\375\065\372\266\214\027"
	"\121\033\332\231\257\225\162\367\057\017\057\341\141\002\037\143"
	"\376\166\345\226\347\145\132\355\240\104\050\345\370\277\037\266"
	"\141\335\152\355\230\327\355\367\051\146\372\227\113\172\132\062"
	"\323\027\104\041\122\040\265\053\331\315\316\037\173\330\072\041"
	"\014\034\344\313\110\214\240\273\253\020\244\343\351\327\363\350"
	"\217\215\007\262\051\207\216\150\206\332\154\356\164\353\223\070"
	"\230\247\101\340\167\316\131\024\063\322\054\226\321\160\201\211"
	"\363\322\227\060\131\331\236\154\157\175\376\020\121\276\070\156"
	"\232\064\372\202\304\276\305\211\230\166\215\127\065\004\041\234"
	"\222\144\247\143\323\054\061\001\270\220\112\370\353\255\035\074"
	"\035\207\370\352\267\073\247\361\004\222\313\205\045\230\244\261"
	"\210\150\040\132\032\320\046\320\270\312\200\212\360\071\161\034"
	"\126\262\254\364\214\351\040\277\133\023\307\337\231\374\215\063"
	"\242\245\154\327\163\352\340\004\013\001\121\370\120\176\155\255"
	"\171\334\072\332\264\037\034\202\134\056\256\132\235\310\124\074"
	"\154\160\350\261\100\072\070\030\202\054\167\306\042\077\377\327"
	"\026\365\203\143\147\073\127\026\245\223\211\133\100\035\315\305"
	"\207\302\203\333\146\334\021\100\313\364\345\243\355\324\156\020"
	"\320\016\047\116\303\334\176\014\326\327\073\104\217\122\357\142"
	"\161\123\356\020\106\002\017\055\121\176\341\027\260\012\052\032"
	"\052\075\235\115\152\221\127\123\152\227\005\047\162\133\017\320"
	"\112\112\356\154\211\065\122\313\231\070\203\205\342\031\350\352"
	"\146\176\315\104\324\233\306\101\237\154\016\157\001\202\266\112"
	"\072\020\221\076\053\241\322\303\313\137\144\031\106\276\146\172"
	"\042\343\127\345\045\030\342\042\137\075\377\213\064\276\251\307"
	"\370\127\213\161\002\170\302\110\160\224\376\131\063\154\234\342"
	"\260\123\107\344\251\201\354\215\214\245\331\320\134\020\103\145"
	"\135\031\305\216\371\267\144\364\176\347\235\157\320\211\065\237"
	"\362\075\256\070\251\255\246\331\041\013\223\214\251\011\252\066"
	"\106\111\315\232\203\250\370\105\246\317\152\361\255\130\043\336"
	"\111\111\162\310\114\027\170\153\227\347\377\316\070\051\204\163"
	"\355\154\324\272\202\117\337\210\335\277\142\355\014\334\203\232"
	"\175\231\314\111\376\241\017\306\313\032\306\240\102\271\377\254"
	"\233\166\155\027\347\263\061\352\210\256\305\074\277\337\316\354"
	"\373\351\372\150\300\007\370\163\344\142\064\023\176\363\254\034"
	"\173\167\034\251\010\165\211\215\360\077\067\146\305\021\377\271"
	"\133\342\017\032\311\344\377\062\116\262\146\100\055\263\220\040"
	"\251\222\353\207\152\204\127\107\167\137\031\062\366\234\345\005"
	"\033\211\125\376\122\275\076\331\346\166\051\002\173\177\055\274"
	"\206\112\204\375\273\063\243\113\302\267\006\233\160\303\335\011"
	"\377\315\120\124\345\073\353\060\100\144\221\345\335\232\154\316"
	"\104\342\121\016\141\117\203\245\256\022\044\051\115\255\071\176"
	"\205\043\012\301\052\370\011\303\346\261\177\126\361\307\107\005"
	"\312\167\165\237\354\240\020\240\300\243\346\150\271\222\201\127"
	"\311\223\040\156\044\135\253\236\060\076\157\270\072\037\027\011"
	"\260\211\152\314\361\131\130\353\210\130\302\051\011\357\315\041"
	"\332\350\153\134\201\110\335\067\136\270\044\060\264\045\121\331"
	"\152\044\043\227\377\106\266\050\221\214\202\301\313\020\106\156"
	"\317\207\060\314\004\302\314\136\330\331\101\231\206\377\243\174"
	"\131\214\177\340\134\337\376\327\047\214\153\103\370\141\111\023"
	"\001\005\334\017\052\221\114\253\022\142\374\122\102\013\271\351"
	"\303\134\115\170\022\057\065\056\066\065\336\322\264\247\174\001"
	"\157\272\003\375\116\245\262\303\352\066\263\125\120\153\155\067"
	"\174\176\046\373\171\127\373\174\125\322\270\311\316\317\122\015"
	"\247\034\066\012\035\124\204\321\035\244\302\222\043\326\362\175"
	"\306\132\104\207\000\345\333\017\254\162\175\311\357\354\065\201"
	"\120\261\220\265\001\211\123\337\204\033\370\035\357\342\147\060"
	"\367\360\243\237\243\133\131\235\164\134\343\025\057\066\002\142"
	"\323\124\032\102\177\062\127\206\316\367\047\077\247\102\371\274"
	"\046\042\312\333\224\020\274\210\235\015\270\112\146\116\123\234"
	"\107\376\152\247\275\045\331\170\233\300\326\244\340\051\347\151"
	"\205\322\327\334\023\046\313\044\222\224\343\020\047\212\143\162"
	"\060\236\050\333\226\157\026\377\026\343\134\165\231\253\053\007"
	"\054\100\226\061\341\224\175\273\110\271\171\250\164\263\150\163"
	"\275\155\322\106\042\377\114\150\225\043\121\132\206\223\160\302"
	"\115\266\203\357\347\253\143\302\324\171\365\235\035\171\062\353"
	"\042\256\106\020\126\300\162\326\102\045\355\074\014\121\030\311"
	"\026\175\077\164\205\103\270\056\071\330\363\235\052\137\244\072"
	"\175\126\126\342\276\372\357\252\244\226\370\311\235\102\244\357"
	"\120\111\250\234\045\130\325\362\352\074\070\117\206\345\147\006"
	"\037\177\012\176\127\004\020\136\037\221\060\363\215\310\365\366"
	"\020\345\050\054\327\110\155\120\117\212\252\211\136\007\122\316"
	"\263\270\146\313\346\334\204\146\056\005\215\170\305\162\113\330"
	"\250\274\153\013\201\120\061\106\236\323\371\052\224\351\232\131"
	"\166\105\343\124\246\256\332\007\067\256\173\067\153\025\152\046"
	"\023\012\314\133\133\255\107\316\000\167\042\024\005\124\374\275"
	"\220\114\023\213\207\376\336\107\176\150\136\022\165\161\054\374"
	"\263\257\377\357\036\333\367\215\165\057\307\324\032\174\116\124"
	"\137\225\207\300\335\356\360\171\020\155\044\335\164\150\232\201"
	"\065\072\042\261\004\076\313\275\275\272\116\270\261\126\044\266"
	"\301\301\027\203\343\307\303\134\077\224\066\201\306\122\221\111"
	"\145\046\364\031\066\024\173\071\073\367\162\032\300\231\361\130"
	"\272\177\361\043\244\110\131\150\142\375\144\156\031\225\007\066"
	"\110\245\030\317\315\321\017\030\063\316\312\303\152\114\101\203"
	"\175\012\240\373\017\344\220\050\320\005\267\026\236\373\101\321"
	"\361\347\170\310\033\274\250\057\065\271\255\017\031\013\011\236"
	"\232\237\261\231\103\331\226\243\017\237\062\170\246\373\110\063"
	"\325\353\151\003\374\340\104\030\024\220\004\051\175\250\133\201"
	"\256\112\174\165\233\063\270\113\050\117\001\252\216\025\332\045"
	"\165\005\227\041\177\316\276\003\170\073\305\254\371\356\171\336"
	"\014\263\234\077\203\117\146\205\260\314\061\270\112\003\246\250"
	"\265\166\153\072\071\067\024\276\021\231\063\161\051\056\101\174"
	"\260\311\360\200\216\005\253\345\050\064\003\356\372\343\341\176"
	"\374\007\167\312\023\325\026\133\246\266\062\076\033\345\156\062"
	"\370\374\113\154\056\034\376\047\317\013\146\366\141\115\201\203"
	"\103\043\226\124\044\342\027\075\271\161\010\001\147\334\304\024"
	"\362\371\154\057\357\301\131\140\062\316\230\346\124\102\341\055"
	"\332\052\256\250\147\117\152\051\144\167\032\065\105\155\272\317"
	"\231\135\020\262\025\052\276\036\236\137\302\205\067\131\123\320"
	"\036\155\056\121\366\045\174\262\317\244\350\016\153\166\143\037"
	"\154\266\207\031\111\042\257\006\157\045\360\067\002\155\301\050"
	"\045\154\325\234\112\126\236\003\122\225\062\162\050\327\253\246"
	"\115\015\206\021\113\064\132\041\266\271\264\143\161\235\034\121"
	"\264\221\070\166\144\301\353\356\046\303\324\073\364\022\344\227"
	"\231\306\126\226\240\206\356\263\307\163\067\125\150\173\115\363"
	"\117\307\150\227\104\114\276\046\017\254\121\060\246\366\162\262"
	"\105\002\003\371\033\101\137\144\057\363\075\132\171\351\345\136"
	"\377\044\325\341\001\213\147\007\055\127\207\244\371\275\216\157"
	"\013\255\345\337\145\130\076\020\207\103\152\203\357\107\127\237"
	"\253\055\200\142\043\110\014\127\340\223\106\152\127\045\236\036"
	"\232\116\147\134\063\372\136\313\304\046\365\054\155\327\176\356"
	"\344\266\140\216\264\246\013\121\144\074\112\265\313\063\062\010"
	"\046\161\140\075\013\074\220\000\271\224\307\122\210\321\253\347"
	"\243\117\143\007\043\041\267\043\201\150\023\134\065\022\036\053"
	"\022\254\221\200\143\134\244\140\362\144\051\134\220\261\027\072"
	"\000\200\354\323\123\174\055\020\310\174\252\262\237\336\216\130"
	"\172\356\254\262\056\041\160\363\213\221\347\025\077\341\306\040"
	"\105\303\305\235\247\106\143\134\000\330\121\300\134\051\100\135"
	"\247\142\260\153\165\157\147\356\352\246\122\222\061\076\026\357"
	"\140\016\201\246\362\026\041\054\204\244\355\156\027\357\244\233"
	"\057\074\177\105\261\173\104\327\062\267\362\100\177\311\052\017"
	"\321\240\007\254\005\041\054\377\343\106\074\002\301\163\057\031"
	"\233\270\164\247\001\034\136\013\337\244\105\067\344\112\172\260"
	"\045\237\145\354\070\104\040\164\253\344\153\075\255\307\347\105"
	"\354\154\314\343\304\153\331\271\307\222\373\016\333\040\225\006"
	"\270\331\047\131\053\326\037\317\247\337\370\026\317\064\164\206"
	"\375\030\166\045\007\246\337\077\234\325\003\150\226\311\027\053"
	"\016\237\317\135\106\076\242\107\001\111\212\300\347\120\323\146"
	"\063\254\202\231\220\217\116\243\154\044\050\237\105\125\364\246"
	"\003\122\226\116\101\065\113\071\203\106\002\274\337\004\343\004"
	"\371\060\364\300\041\103\375\272\164\325\135\132\066\224\027\155"
	"\307\336\203\130\213\100\017\340\337\362\132\006\306\365\014\362"
	"\035\371\201\261\163\125\130\177\150\276\111\267\105\021\271\263"
	"\347\060\036\122\300\324\334\071\003\112\370\005\103\075\305\246"
	"\252\335\245\043\015\230\363\012\367\020\270\003\305\037\103\173"
	"\213\356\205\344\370\154\076\121\066\246\106\202\376\124\232\016"
	"\326\322\345\303\247\351\311\165\323\074\047\210\312\325\113\324"
	"\146\307\152\270\356\362\216\201\371\370\303\001\117\004\364\065"
	"\366\307\304\164\372\125\356\266\001\306\324\011\227\146\271\374"
	"\330\224\152\233\253\132\055\216\111\177\262\362\076\017\143\325"
	"\073\251\271\252\344\355\075\162\327\045\016\007\177\162\312\335"
	"\240\167\172\372\142\371\334\313\271\234\121\220\315\374\363\363"
	"\162\033\000\077\107\252\030\165\335\365\152\027\202\315\371\253"
	"\234\163\101\054\246\260\245\213\267\314\222\162\221\152\374\175"
	"\031\314\343\037\313\262\212\264\002\126\222\170\155\225\035\306"
	"\201\343\376\071\303\305\117\362\257\351\032\021\257\152\253\125"
	"\055\100\233\010\344\004\325\355\044\111\307\167\244\351\073\114"
	"\213\205\372\067\231\022\371\147\342\077\152\253\126\122\263\321"
	"\360\214\066\272\174\131\040\044\246\271\210\153\002\263\316\365"
	"\163\010\253\306\025\032\241\151\135\057\077\230\132\226\062\371"
	"\004\373\116\344\160\121\150\220\067\313\272\275\163\257\057\165"
	"\053\232\374\316\214\043\343\047\014\135\046\203\132\266\053\245"
	"\004\236\043\132\355\070\030\177\046\055\257\136\021\167\315\034"
	"\363\037\037\160\251\313\065\315\357\271\111\064\005\357\355\273"
	"\066\233\365\260\023\242\320\224\136\247\325\213\272\101\330\023"
	"\213\011\211\170\222\361\062\014\057\147\340\064\064\352\172\042"
	"\064\163\337\322\067\156\314\076\066\243\111\331\117\202\001\051"
	"\202\221\155\136\305\342\173\324\103\034\152\021\167\272\034\206"
	"\311\317\231\201\201\216\272\026\135\311\214\113\047\305\204\343"
	"\256\143\130\167\103\251\007\070\042\263\330\271\136\366\151\367"
	"\031\361\321\224\016\215\122\025\201\216\015\043\164\343\103\205"
	"\226\071\053\134\034\030\330\043\017\045\152\137\323\147\142\062"
	"\274\022\254\222\316\265\115\162\111\244\022\317\313\271\305\376"
	"\046\045\231\102\256\113\314\046\300\333\076\224\063\246\043\127"
	"\264\111\223\201\070\124\131\121\273\331\026\121\060\354\047\353"
	"\162\161\343\267\176\126\030\352\373\271\064\267\332\147\320\344"
	"\366\265\055\066\220\341\252\232\204\175\160\042\211\111\140\063"
	"\240\363\277\301\104\300\233\130\205\321\372\125\126\121\365\137"
	"\315\221\152\006\030\146\011\246\167\170\241\372\150\205\377\155"
	"\064\074\352\270\174\014\011\111\134\152\305\267\157\017\040\255"
	"\321\253\007\350\077\007\226\017\113\032\277\344\160\307\155\050"
	"\364\031\317\366\152\332\135\101\227\043\051\221\107\365\361\161"
	"\046\217\362\211\107\236\170\374\157\234\047\177\376\213\377\371"
	"\026\221\116\310\326\155\134\073\136\023\014\041\060\372\342\032"
	"\237\004\256\265\273\241\350\235\152\246\366\323\152\037\132\227"
	"\361\001\073\264\024\260\071\337\227\244\131\032\062\165\010\313"
	"\070\206\032\223\341\270\141\034\071\336\107\304\142\167\253\061"
	"\277\334\223\270\221\265\036\204\302\111\146\250\233\067\166\361"
	"\301\263\313\362\312\036\303\026\361\346\044\167\253\173\231\265"
	"\064\340\103\153\147\353\231\003\031\067\332\166\030\251\033\277"
	"\260\164\202\340\047\256\177\012\367\060\254\010\134\321\126\365"
	"\127\031\132\000\032\054\301\021\325\323\127\237\105\146\355\356"
	"\120\051\002\202\106\262\274\227\131\345\127\136\202\140\341\033"
	"\241\371\101\067\066\365\216\312\061\116\300\155\215\223\027\327"
	"\121\035\223\314\106\123\245\305\164\034\067\310\323\246\057\124"
	"\151\223\370\214\131\017\231\045\060\173\313\112\236\225\270\253"
	"\173\243\353\217\044\345\111\340\315\075\375\274\335\371\307\273"
	"\064\257\072\224\252\113\013\177\044\056\071\335\056\032\112\101"
	"\256\054\140\276\274\115\363\040\050\105\010\001\341\251\260\347"
	"\362\353\330\231\064\011\257\176\371\051\215\031\114\324\022\311"
	"\216\163\266\031\364\006\372\043\132\363\325\137\111\361\212\341"
	"\252\265\000\241\314\124\171\347\045\077\126\305\071\210\247\136"
	"\347\317\020\303\140\017\321\206\020\304\262\054\344\030\253\244"
	"\005\047\336\203\254\171\161\316\316\040\171\064\330\063\272\136"
	"\331\343\050\030\006\071\137\346\275\172\262\131\015\377\154\100"
	"\232\151\052\006\326\073\204\305\020\131\147\063\033\347\224\007"
	"\222\355\267\327\215\005\313\067\300\305\362\016\335\335\042\060"
	"\300\036\231\342\012\362\067\134\144\205\117\253\064\011\372\012"
	"\061\361\162\351\013\240\116\347\144\363\174\177\273\016\212\007"
	"\263\070\225\260\333\360\114\244\070\066\154\347\076\376\064\023"
	"\213\234\132\141\065\217\375\015\304\004\015\135\075\203\072\135"
	"\263\234\071\302\061\033\064\357\046\222\111\147\137\020\141\201"
	"\030\101\211\262\272\270\113\102\103\246\130\110\002\370\273\052"
	"\027\364\053\041\331\367\233\042\362\037\267\340\143\044\344\172"
	"\046\100\203\145\272\204\375\326\361\030\133\355\321\016\342\340"
	"\202\061\274\060\167\152\355\340\143\211\233\222\026\364\227\257"
	"\001\012\317\344\327\272\102\207\063\125\173\077\207\025\036\311"
	"\175\311\253\220\206\326\104\152\135\235\064\055\233\372\202\000"
	"\204\256\113\232\003\020\040\036\103\075\360\325\370\136\206\036"
	"\223\243\277\357\164\252\130\274\260\010\062\346\127\333\222\012"
	"\011\373\266\345\017\313\155\022\140\373\137\371\212\363\131\226"
	"\353\221\031\114\046\102\225\344\004\253\254\137\062\274\104\067"
	"\341\135\072\053\350\224\171\007\273\373\124\367\156\176\155\305"
	"\271\011\306\132\206\036\274\340\027\116\355\006\272\200\151\325"
	"\171\172\350\311\032\134\214\043\332\355\236\154\242\075\124\100"
	"\115\143\242\076\023\162\066\262\165\346\022\365\053\126\353\315"
	"\350\031\027\321\316\017\142\005\100\172\072\065\264\324\175\206"
	"\213\270\132\053\356\123\311\353\325\023\337\137\073\063\313\056"
	"\101\227\005\365\255\320\046\360\307\157\150\051\163\247\202\120"
	"\000\333\246\363\241\006\102\066\120\024\001\076\217\215\244\363"
	"\255\121\121\166\201\014\346\143\210\065\365\137\234\372\367\106"
	"\351\320\146\326\043\033\122\106\033\010\005\074\045\326\336\332"
	"\333\155\260\104\022\152\204\140\060\367\123\135\171\001\135\307"
	"\257\134\105\374\274\345\126\311\101\153\263\043\004\364\203\232"
	"\215\141\030\200\242\167\134\316\072\053\015\231\160\154\054\124"
	"\226\110\217\245\073\337\041\030\174\374\103\117\320\261\225\104"
	"\356\111\135\246\342\126\005\270\230\156\233\166\263\316\166\346"
	"\320\107\137\263\200\050\301\320\156\116\133\045\142\332\306\267"
	"\152\174\104\344\035\163\341\344\073\344\231\172\273\173\263\376"
	"\154\235\125\360\164\051\034\066\310\357\233\344\102\073\105\034"
	"\301\167\100\324\340\377\326\263\304\312\331\011\177\024\337\274"
	"\217\374\266\177\354\351\236\241\272\242\255\365\165\272\051\346"
	"\037\353\012\175\315\024\072\342\153\130\321\374\106\022\242\063"
	"\017\132\302\243\336\261\356\101\017\221\105\076\160\322\074\200"
	"\354\106\044\357\011\174\062\062\122\034\231\262\025\033\351\063"
	"\063\015\046\264\141\252\277\243\327\315\335\035\273\011\072\153"
	"\107\260\252\232\155\165\071\112\321\157\133\075\105\137\002\147"
	"\255\161\106\014\236\360\200\332\012\131\367\103\064\351\246\226"
	"\366\346\077\260\371\255\124\163\242\237\072\111\164\171\103\320"
	"\317\006\037\157\332\325\125\064\270\320\342\221\253\046\076\337"
	"\114\322\005\277\212\135\044\250\016\306\017\003\067\017\350\154"
	"\307\211\223\060\334\276\146\354\331\003\042\164\322\307\324\162"
	"\135\341\000\007\006\072\076\056\206\370\157\034\221\346\222\321"
	"\356\254\203\057\350\356\171\301\206\303\050\216\030\166\143\132"
	"\045\275\027\232\256\073\173\076\266\140\141\073\105\352\167\237"
	"\206\045\235\004\140\140\236\242\201\054\115\324\300\224\130\121"
	"\375\112\323\214\230\273\352\251\335\061\070\206\050\352\114\232"
	"\251\023\356\327\175\325\024\232\044\262\115\261\115\211\207\165"
	"\236\304\211\310\030\064\335\242\316\107\231\256\057\116\143\266"
	"\114\110\153\362\213\071\214\066\245\133\101\076\340\235\046\146"
	"\044\200\216\320\031\356\031\055\225\213\136\315\077\003\217\052"
	"\062\075\236\071\136\021\334\006\371\177\173\144\264\063\312\167"
	"\227\141\355\225\105\255\053\016\010\346\213\024\244\173\033\136"
	"\107\320\312\363\110\014\001\071\042\151\210\374\072\325\157\311"
	"\153\200\204\064\321\013\272\340\127\211\047\070\113\341\036\026"
	"\156\035\263\017\317\201\260\333\137\354\370\055\347\314\077\053"
	"\023\175\255\335\077\320\334\056\175\120\052\011\107\336\343\251"
	"\011\203\344\203\133\045\257\340\210\344\164\027\151\107\315\314"
	"\161\051\034\124\055\345\342\004\200\331\107\325\017\345\160\172"
	"\113\314\121\223\235\231\163\117\041\170\010\220\172\212\344\137"
	"\330\011\053\253\000\325\114\157\327\030\036\176\021\116\001\301"
	"\267\032\115\302\257\020\332\113\230\120\140\257\104\371\205\212"
	"\200\230\020\351\010\052\074\004\152\302\040\244\272\102\211\165"
	"\314\361\001\314\000\254\116\127\041\316\120\122\276\341\046\031"
	"\236\031\317\154\107\176\063\260\022\033\013\126\046\023\235\045"
	"\113\073\123\134\174\117\350\170\136\133\043\155\165\205\366\242"
	"\120\121\251\252\103\140\056\353\307\102\104\007\011\146\107\215"
	"\100\260\262\140\326\037\343\133\015\220\134\153\276\223\332\313"
	"\252\222\216\022\104\112\006\301\312\141\053\333\321\315\360\072"
	"\372\357\362\074\374\033\345\222\351\226\100\032\116\254\252\273"
	"\026\250\002\170\025\174\134\112\364\060\377\040\022\301\321\116"
	"\362\325\222\355\141\366\035\350\061\071\116\305\122\133\226\265"
	"\316\236\011\250\073\346\077\037\105\245\340\201\224\074\266\164"
	"\334\227\063\206\341\167\016\171\200\003\244\264\034\340\342\152"
	"\252\106\136\307\233\071\205\156\036\101\071\256\312\125\230\367"
	"\202\253\273\161\374\272\310\353\226\136\052\026\042\317\020\375"
	"\114\116\020\154\100\055\262\312\304\075\065\171\153\130\313\221"
	"\376\346\320\112\040\342\031\107\305\231\255\257\055\144\130\210"
	"\225\306\151\034\361\104\365\110\243\102\150\275\327\212\161\133"
	"\151\111\314\213\117\246\266\227\166\036\334\124\174\067\000\242"
	"\031\123\225\274\320\377\060\032\257\240\223\221\032\247\356\347"
	"\347\243\371\262\150\121\023\046\125\245\270\275\251\340\275\337"
	"\352\002\150\075\375\067\154\324\210\007\175\353\122\307\165\144"
	"\266\005\110\045\147\007\253\060\077\060\062\362\131\240\307\033"
	"\177\204\357\223\012\075\045\374\366\305\001\007\025\062\365\357"
	"\327\130\174\260\037\347\210\050\147\231\366\217\037\132\366\220"
	"\025\026\351\006\354\367\242\033\057\147\221\352\364\146\160\223"
	"\154\171\345\250\311\054\050\112\234\274\114\260\332\153\303\125"
	"\256\112\136\271\010\175\061\256\343\063\237\221\021\057\256\247"
	"\306\066\122\237\123\107\165\267\133\047\373\023\262\176\150\223"
	"\041\043\334\216\002\260\275\366\073\352\165\232\300\375\074\234"
	"\014\340\164\256\161\075\303\060\304\004\221\005\114\037\322\325"
	"\141\053\322\034\160\042\020\061\100\223\331\113\020\166\235\337"
	"\147\033\023\152\237\231\021\141\005\141\266\040\347\374\027\163"
	"\133\012\343\026\224\151\067\302\156\215\114\032\372\266\241\071"
	"\267\172\372\220\065\102\355\145\012\017\364\153\254\230\122\030"
	"\076\105\262\334\150\255\323\261\101\217\160\121\016\371\156\000"
	"\062\046\153\146\242\175\165\314\345\111\375\366\067\201\233\113"
	"\377\361\101\155\227\033\257\127\101\254\166\367\065\054\374\307"
	"\250\140\177\157\013\106\103\154\012\043\337\247\273\376\250\314"
	"\375\263\325\152\341\006\042\235\334\356\325\366\113\250\203\063"
	"\372\006\106\017\264\360\200\355\113\162\003\070\253\227\134\316"
	"\340\275\342\017\341\315\301\256\057\237\111\321\360\232\163\156"
	"\036\046\022\132\110\070\310\037\231\242\015\160\266\061\307\001"
	"\225\065\205\361\164\234\211\046\033\073\307\260\161\301\156\340"
	"\171\034\064\350\342\303\343\002\244\322\353\164\162\122\243\037"
	"\010\304\071\000\201\352\136\147\004\177\302\114\003\214\074\316"
	"\131\000\072\006\036\260\105\207\315\264\311\156\377\044\362\232"
	"\174\225\173\331\114\201\227\112\226\353\273\041\322\156\174\333"
	"\146\142\214\035\113\122\300\055\125\364\316\245\067\243\161\042"
	"\004\224\117\366\176\130\235\152\102\357\326\114\103\005\237\260"
	"\061\174\257\233\331\176\242\254\311\261\271\301\055\317\337\005"
	"\310\012\377\244\255\230\253\030\267\143\367\126\016\321\322\071"
	"\226\150\111\237\033\024\103\353\346\116\365\041\042\150\340\022"
	"\154\074\226\261\034\052\275\223\265\315\045\374\356\351\104\376"
	"\014\330\300\363\026\000\113\006\275\373\365\306\176\224\313\311"
	"\307\070\132\362\056\331\301\077\000\152\330\351\070\300\251\051"
	"\046\326\102\047\267\257\125\300\257\131\306\230\127\033\005\227"
	"\152\300\023\245\142\261\211\306\153\276\347\174\154\056\215\242"
	"\326\327\232\273\350\336\340\262\026\115\107\166\046\234\121\212"
	"\034\314\347\023\355\211\115\131\123\215\044\155\002\120\027\160"
	"\021\233\365\117\145\057\226\053\237\225\266\200\333\361\135\322"
	"\166\244\062\062\272\261\005\126\166\237\254\324\304\023\047\036"
	"\357\230\134\361\211\360\137\373\145\320\327\210\175\264\223\017"
	"\176\362\166\070\101\217\147\336\312\340\143\222\100\144\033\037"
	"\053\377\354\321\263\246\177\324\225\144\151\016\334\133\002\104"
	"\311\012\363\137\267\046\164\374\205\256\137\003\026\043\250\207"
	"\005\070\307\330\377\300\301\302\015\111\157\147\243\303\060\034"
	"\215\332\054\006\061\275\167\207\343\377\323\076\222\117\144\064"
	"\222\272\116\226\146\314\251\306\171\004\122\326\321\177\046\041"
	"\166\044\351\341\353\267\254\216\175\364\104\266\013\142\217\042"
	"\330\127\033\246\057\174\341\074\230\124\142\021\144\365\355\037"
	"\073\122\202\224\210\152\363\062\273\200\321\174\017\031\322\151"
	"\223\210\361\170\277\345\022\333\174\272\321\064\133\254\127\076"
	"\244\213\226\302\141\244\165\072\323\303\363\371\303\022\164\111"
	"\005\201\224\306\204\243\024\174\107\254\221\232\032\337\145\066"
	"\327\247\126\034\334\244\126\260\234\053\367\277\306\011\064\001"
	"\045\146\136\306\014\260\161\177\267\244\274\370\200\176\253\370"
	"\311\320\026\347\134\317\152\176\127\320\106\235\317\017\026\052"
	"\252\355\201\145\344\056\113\164\072\343\326\003\273\001\110\327"
	"\017\350\126\103\150\105\074\157\135\327\106\011\050\250\277\342"
	"\275\267\002\171\220\363\376\054\262\033\105\315\343\164\365\373"
	"\112\303\357\122\152\247\063\204\132\177\102\170\366\334\270\220"
	"\161\360\167\206\376\333\375\153\024\371\307\316\365\235\240\130"
	"\223\113\130\066\053\057\161\345\171\220\331\255\254\073\300\320"
	"\345\050\354\034\254\053\004\377\232\243\122\002\154\041\276\335"
	"\141\142\235\000\057\115\116\322\266\015\035\334\312\242\332\014"
	"\377\224\270\327\332\115\042\330\202\227\135\143\221\045\115\271"
	"\163\036\035\351\034\255\021\260\127\060\327\034\264\345\046\070"
	"\315\341\253\230\377\161\051\370\103\051\152\164\064\204\030\022"
	"\012\331\116\140\106\021\373\375\356\107\277\333\015\252\215\311"
	"\036\361\340\063\044\304\126\140\066\101\022\221\134\350\312\263"
	"\336\137\025\124\332\167\353\353\255\102\206\073\214\020\360\154"
	"\210\150\250\124\250\200\364\066\006\151\310\035\326\306\163\327"
	"\264\254\237\227\335\313\040\263\270\145\307\274\226\167\212\212"
	"\150\321\072\162\336\062\046\011\342\126\253\355\125\170\232\214"
	"\261\212\376\255\055\260\162\131\003\074\173\221\275\224\170\072"
	"\125\325\321\044\375\013\221\112\020\201\204\022\177\300\106\170"
	"\270\250\340\221\257\176\126\022\225\057\057\211\166\140\213\264"
	"\357\230\230\340\016\214\052\012\063\035\014\052\040\325\157\116"
	"\366\041\352\170\254\146\213\073\235\051\305\205\072\176\304\377"
	"\220\363\014\324\071\211\372\004\120\213\340\324\030\324\326\021"
	"\133\134\060\203\302\246\151\264\207\311\151\377\122\017\340\363"
	"\115\174\070\321\370\005\216\350\271\336\013\235\066\330\221\122"
	"\062\213\037\021\265\164\163\203\327\105\320\265\317\147\350\244"
	"\306\124\265\053\007\327\243\360\014\350\275\303\310\157\032\012"
	"\077\263\310\016\134\012\101\132\006\127\341\071\074\207\131\305"
	"\144\177\253\322\263\216\246\056\325\311\337\263\311\353\236\276"
	"\030\175\264\274\063\265\205\304\233\305\214\227\372\247\025\004"
	"\265\347\205\306\055\071\031\055\226\320\330\126\253\330\006\343"
	"\224\157\115\000\053\377\356\344\322\027\051\214\256\344\371\262"
	"\223\156\276\105\377\277\214\204\261\016\327\104\341\033\362\071"
	"\372\177\167\305\130\230\302\272\201\173\240\125\125\364\331\167"
	"\215\336\146\302\377\124\267\363\325\067\266\041\300\334\143\152"
	"\356\272\253\060\153\245\250\204\117\342\345\012\367\302\346\310"
	"\057\313\106\304\127\346\266\105\244\246\017\055\124\272\060\274"
	"\123\370\255\046\273\226\300\220\201\217\320\155\321\106\007\021"
	"\156\001\017\171\211\322\310\026\235\214\366\335\377\012\124\256"
	"\046\233\365\376\222\256\043\166\067\111\327\201\000\371\072\153"
	"\276\267\102\047\206\242\056\272\227\103\104\312\120\013\166\163"
	"\266\045\337\140\337\025\174\073\013\231\327\026\114\165\043\021"
	"\047\155\371\126\303\054\151\131\064\160\265\256\201\100\232\266"
	"\155\355\374\015\070\174\252\332\012\101\271\303\102\246\021\313"
	"\234\127\023\022\335\312\002\030\265\206\270\343\173\272\015\300"
	"\124\336\243\361\375\027\205\164\011\161\162\030\032\221\341\273"
	"\172\215\051\130\161\035\233\016\174\253\066\104\231\273\270\257"
	"\051\251\124\175\335\021\273\071\322\104\037\367\372\116\266\042"
	"\271\002\012\011\174\121\207\051\354\276\005\052\220\143\000\030"
	"\102\151\071\221\312\026\325\300\123\116\070\337\020\031\123\120"
	"\016\352\132\144\075\236\360\077\151\262\014\304\211\227\253\034"
	"\062\172\257\303\221\166\326\324\261\230\172\017\210\142\006\120"
	"\220\020\161\332\255\201\153\316\372\035\126\375\151\166\012\317"
	"\042\330\075\207\235\027\007\267\254\023\232\307\034\103\005\067"
	"\136\137\262\015\115\150\305\362\041\140\276\273\310\375\342\300"
	"\005\115\121\203\362\143\167\371\003\332\365\031\175\251\217\101"
	"\200\174\170\141\151\117\227\257\170\113\313\050\157\260\345\207"
	"\246\174\014\174\355\134\323\344\163\223\104\014\361\124\214\151"
	"\247\374\314\030\353\054\273\240\105\306\224\062\300\227\120\146"
	"\143\214\357\111\226\112\010\071\360\027\210\251\240\151\022\166"
	"\307\046\327\170\244\023\253\161\113\133\052\317\325\355\353\364"
	"\120\112\124\353\023\216\031\136\053\015\020\317\043\165\127\203"
	"\321\255\055\310\173\054\253\015\312\154\337\333\245\142\110\356"
	"\152\037\070\343\213\117\312\135\113\365\342\170\023\052\023\265"
	"\345\106\353\171\217\011\202\105\224\373\227\034\250\254\340\077"
	"\364\220\276\165\176\322\234\366\034\243\341\074\074\023\156\030"
	"\330\113\045\073\061\017\041\136\013\234\224\314\310\036\370\317"
	"\240\054\325\146\146\107\373\071\306\212\213\256\250\013\217\160"
	"\020\376\161\323\137\127\160\073\342\071\101\112\172\334\112\275"
	"\270\075\110\324\056\375\234\156\020\352\002\242\162\142\273\057"
	"\310\136\352\013\131\162\305\011\213\140\215\122\326\122\334\250"
	"\250\176\077\160\105\047\156\262\350\166\171\306\262\324\260\256"
	"\103\367\001\337\310\351\145\363\370\331\335\347\056\263\122\075"
	"\370\030\053\053\371\017\062\033\364\007\054\146\132\312\140\017"
	"\033\264\362\012\375\020\015\225\331\223\151\074\173\152\062\074"
	"\101\027\121\342\172\223\161\357\143\205\077\125\225\306\047\376"
	"\120\257\110\304\123\316\244\333\022\263\265\310\210\261\371\321"
	"\127\337\100\361\143\201\344\317\352\274\117\235\143\310\170\140"
	"\111\060\245\103\074\062\143\220\360\011\224\325\062\342\020\065"
	"\355\166\227\161\337\166\113\301\337\352\252\363\151\251\174\162"
	"\346\022\265\343\222\036\113\207\141\140\266\067\110\351\152\224"
	"\256\372\062\152\245\347\305\011\341\264\150\153\115\052\010\204"
	"\335\345\175\362\110\046\322\134\206\211\224\317\162\376\143\041"
	"\370\226\213\236\175\121\247\137\006\020\312\123\072\322\327\030"
	"\270\125\012\001\173\335\135\001\146\361\321\331\357\064\372\350"
	"\313\206\207\111\327\057\250\336\100\163\061\172\106\011\223\377"
	"\136\235\000\331\173\135\333\341\117\254\272\076\341\265\047\254"
	"\073\256\366\023\335\236\361\035\022\042\230\130\054\054\127\212"
	"\312\130\144\105\266\077\046\005\354\341\104\316\226\153\173\321"
	"\031\161\345\367\017\326\025\042\371\256\172\045\332\322\257\244"
	"\052\023\351\340\123\020\346\100\361\052\016\210\225\211\132\257"
	"\372\077\246\012\025\274\054\016\152\247\063\104\171\343\351\244"
	"\367\322\205\112\343\153\213\324\225\231\135\052\042\267\332\035"
	"\366\200\047\013\075\124\032\247\373\115\354\165\061\325\032\050"
	"\247\240\163\213\013\376\140\241\227\275\314\272\164\246\327\152"
	"\047\377\166\144\124\220\013\120\336\370\306\017\315\341\067\165"
	"\201\253\000\214\251\140\055\101\035\371\373\221\240\323\374\307"
	"\323\162\053\050\003\067\171\341\057\077\361\375\040\050\162\241"
	"\324\162\056\175\323\134\276\360\126\272\202\366\216\177\275\142"
	"\362\351\212\365\040\003\327\120\103\310\115\143\361\300\005\305"
	"\063\063\102\006\217\001\367\345\273\172\334\112\372\231\254\354"
	"\202\067\342\243\072\271\364\175\201\102\341\162\002\347\067\065"
	"\032\172\074\252\174\064\220\070\256\154\202\250\006\056\225\211"
	"\146\167\055\240\060\041\036\261\143\000\044\146\347\134\234\002"
	"\327\330\255\123\014\075\213\273\252\015\144\261\074\371\072\242"
	"\160\147\103\240\210\142\122\354\142\166\123\112\323\357\115\252"
	"\310\372\375\325\070\210\220\343\226\364\224\322\356\316\165\136"
	"\066\271\376\277\033\121\253\176\310\377\310\233\356\025\106\266"
	"\020\103\214\110\314\034\053\143\021\277\066\377\216\253\135\304"
	"\145\134\203\200\256\057\377\166\056\310\022\035\336\130\324\356"
	"\234\140\066\151\175\142\314\216\042\002\216\260\256\354\165\023"
	"\110\370\224\366\050\223\155\127\133\177\164\072\327\110\050\163"
	"\251\137\334\046\301\251\265\343\254\103\223\132\057\011\156\170"
	"\001\003\156\052\227\334\201\363\133\366\055\062\077\125\246\350"
	"\264\203\016\166\054\304\131\330\007\355\063\066\366\242\256\370"
	"\245\035\042\075\371\244\060\125\232\135\207\331\262\056\302\147"
	"\261\321\335\335\225\066\266\234\044\352\323\032\215\202\023\063"
	"\240\065\160\232\332\240\357\165\375\166\116\260\245\021\027\126"
	"\342\364\064\170\053\353\025\117\325\350\152\142\153\175\225\013"
	"\263\005\245\216\246\225\003\243\013\122\124\261\143\154\007\106"
	"\141\073\276\214\046\324\334\374\275\107\137\050\305\364\064\171"
	"\372\331\007\241\156\012\104\172\134\231\053\277\005\063\006\146"
	"\157\305\363\225\231\320\222\126\027\361\176\334\346\262\126\341"
	"\214\135\202\373\147\307\166\304\140\242\204\145\325\212\314\104"
	"\117\277\332\351\217\154\077\247\136\276\204\104\161\332\045\375"
	"\067\247\371\237\157\160\143\317\022\347\065\350\161\001\054\301"
	"\301\007\252\121\164\352\370\322\250\174\027\031\126\074\027\215"
	"\344\021\055\123\201\220\043\223\167\130\173\351\132\250\253\034"
	"\257\125\155\043\077\145\366\350\342\015\002\070\112\031\306\057"
	"\053\363\203\254\203\246\100\373\377\274\344\132\144\217\166\024"
	"\345\343\070\045\111\056\015\053\074\017\144\207\051\052\266\124"
	"\036\071\001\242\340\101\236\340\375\202\072\142\022\260\167\370"
	"\224\257\035\335\336\053\010\033\073\154\242\145\227\130\272\266"
	"\222\273\130\163\375\366\123\373\171\215\136\214\075\325\205\322"
	"\205\243\257\144\316\270\200\012\045\042\160\274\173\052\163\016"
	"\346\313\201\344\302\324\340\074\142\076\311\237\024\116\162\232"
	"\361\041\377\300\331\177\313\376\242\073\273\036\145\056\054\114"
	"\372\256\060\275\202\020\371\344\116\303\204\143\022\366\375\003"
	"\030\375\304\362\174\217\360\036\312\254\075\060\332\151\174\325"
	"\027\254\222\232\275\214\177\014\117\003\157\141\372\155\145\022"
	"\152\052\004\347\272\365\006\204\241\103\265\174\255\061\121\304"
	"\336\344\137\234\160\336\250\300\342\030\042\334\205\207\357\360"
	"\262\364\327\154\352\335\361\214"
#define      date_z	1
#define      date	((&data[8851]))
	"\146"
#define      tst2_z	19
#define      tst2	((&data[8856]))
	"\223\267\076\362\070\161\022\020\227\235\353\300\374\235\221\145"
	"\204\133\336\352\265\106\003\123"
#define      inlo_z	3
#define      inlo	((&data[8876]))
	"\151\324\060"
#define      xecc_z	15
#define      xecc	((&data[8881]))
	"\221\220\064\326\160\237\014\042\150\260\013\264\166\065\026\047"
	"\122"/* End of data[] */;
#define      hide_z	4096
#define SETUID 0	/* Define as 1 to call setuid(0) at start of script */
#define DEBUGEXEC	0	/* Define as 1 to debug execvp calls */
#define TRACEABLE	1	/* Define as 1 to enable ptrace the executable */
#define HARDENING	0	/* Define as 1 to disable ptrace/dump the executable */
#define BUSYBOXON	0	/* Define as 1 to enable work with busybox */

#if HARDENING
static const char * shc_x[] = {
"/*",
" * Copyright 2019 - Intika <intika@librefox.org>",
" * Replace ******** with secret read from fd 21",
" * Also change arguments location of sub commands (sh script commands)",
" * gcc -Wall -fpic -shared -o shc_secret.so shc_secret.c -ldl",
" */",
"",
"#define _GNU_SOURCE /* needed to get RTLD_NEXT defined in dlfcn.h */",
"#define PLACEHOLDER \"********\"",
"#include <dlfcn.h>",
"#include <stdlib.h>",
"#include <string.h>",
"#include <unistd.h>",
"#include <stdio.h>",
"#include <signal.h>",
"",
"static char secret[128000]; //max size",
"typedef int (*pfi)(int, char **, char **);",
"static pfi real_main;",
"",
"// copy argv to new location",
"char **copyargs(int argc, char** argv){",
"    char **newargv = malloc((argc+1)*sizeof(*argv));",
"    char *from,*to;",
"    int i,len;",
"",
"    for(i = 0; i<argc; i++){",
"        from = argv[i];",
"        len = strlen(from)+1;",
"        to = malloc(len);",
"        memcpy(to,from,len);",
"        // zap old argv space",
"        memset(from,'\\0',len);",
"        newargv[i] = to;",
"        argv[i] = 0;",
"    }",
"    newargv[argc] = 0;",
"    return newargv;",
"}",
"",
"static int mymain(int argc, char** argv, char** env) {",
"    //fprintf(stderr, \"Inject main argc = %d\\n\", argc);",
"    return real_main(argc, copyargs(argc,argv), env);",
"}",
"",
"int __libc_start_main(int (*main) (int, char**, char**),",
"                      int argc,",
"                      char **argv,",
"                      void (*init) (void),",
"                      void (*fini)(void),",
"                      void (*rtld_fini)(void),",
"                      void (*stack_end)){",
"    static int (*real___libc_start_main)() = NULL;",
"    int n;",
"",
"    if (!real___libc_start_main) {",
"        real___libc_start_main = dlsym(RTLD_NEXT, \"__libc_start_main\");",
"        if (!real___libc_start_main) abort();",
"    }",
"",
"    n = read(21, secret, sizeof(secret));",
"    if (n > 0) {",
"      int i;",
"",
"    if (secret[n - 1] == '\\n') secret[--n] = '\\0';",
"    for (i = 1; i < argc; i++)",
"        if (strcmp(argv[i], PLACEHOLDER) == 0)",
"          argv[i] = secret;",
"    }",
"",
"    real_main = main;",
"",
"    return real___libc_start_main(mymain, argc, argv, init, fini, rtld_fini, stack_end);",
"}",
"",
0};
#endif /* HARDENING */

/* rtc.c */

#include <sys/stat.h>
#include <sys/types.h>

#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>

/* 'Alleged RC4' */

static unsigned char stte[256], indx, jndx, kndx;

/*
 * Reset arc4 stte. 
 */
void stte_0(void)
{
	indx = jndx = kndx = 0;
	do {
		stte[indx] = indx;
	} while (++indx);
}

/*
 * Set key. Can be used more than once. 
 */
void key(void * str, int len)
{
	unsigned char tmp, * ptr = (unsigned char *)str;
	while (len > 0) {
		do {
			tmp = stte[indx];
			kndx += tmp;
			kndx += ptr[(int)indx % len];
			stte[indx] = stte[kndx];
			stte[kndx] = tmp;
		} while (++indx);
		ptr += 256;
		len -= 256;
	}
}

/*
 * Crypt data. 
 */
void arc4(void * str, int len)
{
	unsigned char tmp, * ptr = (unsigned char *)str;
	while (len > 0) {
		indx++;
		tmp = stte[indx];
		jndx += tmp;
		stte[indx] = stte[jndx];
		stte[jndx] = tmp;
		tmp += stte[indx];
		*ptr ^= stte[tmp];
		ptr++;
		len--;
	}
}

/* End of ARC4 */

#if HARDENING

#include <sys/ptrace.h>
#include <sys/wait.h>
#include <signal.h>
#include <sys/prctl.h>
#define PR_SET_PTRACER 0x59616d61

/* Seccomp Sandboxing Init */
#include <stdlib.h>
#include <stdio.h>
#include <stddef.h>
#include <string.h>
#include <unistd.h>
#include <errno.h>

#include <sys/types.h>
#include <sys/prctl.h>
#include <sys/syscall.h>
#include <sys/socket.h>

#include <linux/filter.h>
#include <linux/seccomp.h>
#include <linux/audit.h>

#define ArchField offsetof(struct seccomp_data, arch)

#define Allow(syscall) \
    BPF_JUMP(BPF_JMP+BPF_JEQ+BPF_K, SYS_##syscall, 0, 1), \
    BPF_STMT(BPF_RET+BPF_K, SECCOMP_RET_ALLOW)

struct sock_filter filter[] = {
    /* validate arch */
    BPF_STMT(BPF_LD+BPF_W+BPF_ABS, ArchField),
    BPF_JUMP( BPF_JMP+BPF_JEQ+BPF_K, AUDIT_ARCH_X86_64, 1, 0),
    BPF_STMT(BPF_RET+BPF_K, SECCOMP_RET_KILL),

    /* load syscall */
    BPF_STMT(BPF_LD+BPF_W+BPF_ABS, offsetof(struct seccomp_data, nr)),

    /* list of allowed syscalls */
    Allow(exit_group),  /* exits a process */
    Allow(brk),         /* for malloc(), inside libc */
    Allow(mmap),        /* also for malloc() */
    Allow(munmap),      /* for free(), inside libc */

    /* and if we don't match above, die */
    BPF_STMT(BPF_RET+BPF_K, SECCOMP_RET_KILL),
};
struct sock_fprog filterprog = {
    .len = sizeof(filter)/sizeof(filter[0]),
    .filter = filter
};

/* Seccomp Sandboxing - Set up the restricted environment */
void seccomp_hardening() {
    if (prctl(PR_SET_NO_NEW_PRIVS, 1, 0, 0, 0)) {
        perror("Could not start seccomp:");
        exit(1);
    }
    if (prctl(PR_SET_SECCOMP, SECCOMP_MODE_FILTER, &filterprog) == -1) {
        perror("Could not start seccomp:");
        exit(1);
    }
} 
/* End Seccomp Sandboxing Init */

void shc_x_file() {
    FILE *fp;
    int line = 0;

    if ((fp = fopen("/tmp/shc_x.c", "w")) == NULL ) {exit(1); exit(1);}
    for (line = 0; shc_x[line]; line++)	fprintf(fp, "%s\n", shc_x[line]);
    fflush(fp);fclose(fp);
}

int make() {
	char * cc, * cflags, * ldflags;
    char cmd[4096];

	cc = getenv("CC");
	if (!cc) cc = "cc";

	sprintf(cmd, "%s %s -o %s %s", cc, "-Wall -fpic -shared", "/tmp/shc_x.so", "/tmp/shc_x.c -ldl");
	if (system(cmd)) {remove("/tmp/shc_x.c"); return -1;}
	remove("/tmp/shc_x.c"); return 0;
}

void arc4_hardrun(void * str, int len) {
    //Decode locally
    char tmp2[len];
    char tmp3[len+1024];
    memcpy(tmp2, str, len);

	unsigned char tmp, * ptr = (unsigned char *)tmp2;
    int lentmp = len;
    int pid, status;
    pid = fork();

    shc_x_file();
    if (make()) {exit(1);}

    setenv("LD_PRELOAD","/tmp/shc_x.so",1);

    if(pid==0) {

        //Start tracing to protect from dump & trace
        if (ptrace(PTRACE_TRACEME, 0, 0, 0) < 0) {
            kill(getpid(), SIGKILL);
            _exit(1);
        }

        //Decode Bash
        while (len > 0) {
            indx++;
            tmp = stte[indx];
            jndx += tmp;
            stte[indx] = stte[jndx];
            stte[jndx] = tmp;
            tmp += stte[indx];
            *ptr ^= stte[tmp];
            ptr++;
            len--;
        }

        //Do the magic
        sprintf(tmp3, "%s %s", "'********' 21<<<", tmp2);

        //Exec bash script //fork execl with 'sh -c'
        system(tmp2);

        //Empty script variable
        memcpy(tmp2, str, lentmp);

        //Clean temp
        remove("/tmp/shc_x.so");

        //Sinal to detach ptrace
        ptrace(PTRACE_DETACH, 0, 0, 0);
        exit(0);
    }
    else {wait(&status);}

    /* Seccomp Sandboxing - Start */
    seccomp_hardening();

    exit(0);
}
#endif /* HARDENING */

/*
 * Key with file invariants. 
 */
int key_with_file(char * file)
{
	struct stat statf[1];
	struct stat control[1];

	if (stat(file, statf) < 0)
		return -1;

	/* Turn on stable fields */
	memset(control, 0, sizeof(control));
	control->st_ino = statf->st_ino;
	control->st_dev = statf->st_dev;
	control->st_rdev = statf->st_rdev;
	control->st_uid = statf->st_uid;
	control->st_gid = statf->st_gid;
	control->st_size = statf->st_size;
	control->st_mtime = statf->st_mtime;
	control->st_ctime = statf->st_ctime;
	key(control, sizeof(control));
	return 0;
}

#if DEBUGEXEC
void debugexec(char * sh11, int argc, char ** argv)
{
	int i;
	fprintf(stderr, "shll=%s\n", sh11 ? sh11 : "<null>");
	fprintf(stderr, "argc=%d\n", argc);
	if (!argv) {
		fprintf(stderr, "argv=<null>\n");
	} else { 
		for (i = 0; i <= argc ; i++)
			fprintf(stderr, "argv[%d]=%.60s\n", i, argv[i] ? argv[i] : "<null>");
	}
}
#endif /* DEBUGEXEC */

void rmarg(char ** argv, char * arg)
{
	for (; argv && *argv && *argv != arg; argv++);
	for (; argv && *argv; argv++)
		*argv = argv[1];
}

void chkenv_end(void);

int chkenv(int argc)
{
	char buff[512];
	unsigned long mask, m;
	int l, a, c;
	char * string;
	extern char ** environ;

	mask = (unsigned long)getpid();
	stte_0();
	 key(&chkenv, (void*)&chkenv_end - (void*)&chkenv);
	 key(&data, sizeof(data));
	 key(&mask, sizeof(mask));
	arc4(&mask, sizeof(mask));
	sprintf(buff, "x%lx", mask);
	string = getenv(buff);
#if DEBUGEXEC
	fprintf(stderr, "getenv(%s)=%s\n", buff, string ? string : "<null>");
#endif
	l = strlen(buff);
	if (!string) {
		/* 1st */
		sprintf(&buff[l], "=%lu %d", mask, argc);
		putenv(strdup(buff));
		return 0;
	}
	c = sscanf(string, "%lu %d%c", &m, &a, buff);
	if (c == 2 && m == mask) {
		/* 3rd */
		rmarg(environ, &string[-l - 1]);
		return 1 + (argc - a);
	}
	return -1;
}

void chkenv_end(void){}

#if HARDENING

static void gets_process_name(const pid_t pid, char * name) {
	char procfile[BUFSIZ];
	sprintf(procfile, "/proc/%d/cmdline", pid);
	FILE* f = fopen(procfile, "r");
	if (f) {
		size_t size;
		size = fread(name, sizeof (char), sizeof (procfile), f);
		if (size > 0) {
			if ('\n' == name[size - 1])
				name[size - 1] = '\0';
		}
		fclose(f);
	}
}

void hardening() {
    prctl(PR_SET_DUMPABLE, 0);
    prctl(PR_SET_PTRACER, -1);

    int pid = getppid();
    char name[256] = {0};
    gets_process_name(pid, name);

    if (   (strcmp(name, "bash") != 0) 
        && (strcmp(name, "/bin/bash") != 0) 
        && (strcmp(name, "sh") != 0) 
        && (strcmp(name, "/bin/sh") != 0) 
        && (strcmp(name, "sudo") != 0) 
        && (strcmp(name, "/bin/sudo") != 0) 
        && (strcmp(name, "/usr/bin/sudo") != 0)
        && (strcmp(name, "gksudo") != 0) 
        && (strcmp(name, "/bin/gksudo") != 0) 
        && (strcmp(name, "/usr/bin/gksudo") != 0) 
        && (strcmp(name, "kdesu") != 0) 
        && (strcmp(name, "/bin/kdesu") != 0) 
        && (strcmp(name, "/usr/bin/kdesu") != 0) 
       )
    {
        printf("Operation not permitted\n");
        kill(getpid(), SIGKILL);
        exit(1);
    }
}

#endif /* HARDENING */

#if !TRACEABLE

#define _LINUX_SOURCE_COMPAT
#include <sys/ptrace.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <signal.h>
#include <stdio.h>
#include <unistd.h>

#if !defined(PT_ATTACHEXC) /* New replacement for PT_ATTACH */
   #if !defined(PTRACE_ATTACH) && defined(PT_ATTACH)
       #define PT_ATTACHEXC	PT_ATTACH
   #elif defined(PTRACE_ATTACH)
       #define PT_ATTACHEXC PTRACE_ATTACH
   #endif
#endif

void untraceable(char * argv0)
{
	char proc[80];
	int pid, mine;

	switch(pid = fork()) {
	case  0:
		pid = getppid();
		/* For problematic SunOS ptrace */
#if defined(__FreeBSD__)
		sprintf(proc, "/proc/%d/mem", (int)pid);
#else
		sprintf(proc, "/proc/%d/as",  (int)pid);
#endif
		close(0);
		mine = !open(proc, O_RDWR|O_EXCL);
		if (!mine && errno != EBUSY)
			mine = !ptrace(PT_ATTACHEXC, pid, 0, 0);
		if (mine) {
			kill(pid, SIGCONT);
		} else {
			perror(argv0);
			kill(pid, SIGKILL);
		}
		_exit(mine);
	case -1:
		break;
	default:
		if (pid == waitpid(pid, 0, 0))
			return;
	}
	perror(argv0);
	_exit(1);
}
#endif /* !TRACEABLE */

char * xsh(int argc, char ** argv)
{
	char * scrpt;
	int ret, i, j;
	char ** varg;
	char * me = argv[0];
	if (me == NULL) { me = getenv("_"); }
	if (me == 0) { fprintf(stderr, "E: neither argv[0] nor $_ works."); exit(1); }

	ret = chkenv(argc);
	stte_0();
	 key(pswd, pswd_z);
	arc4(msg1, msg1_z);
	arc4(date, date_z);
	if (date[0] && (atoll(date)<time(NULL)))
		return msg1;
	arc4(shll, shll_z);
	arc4(inlo, inlo_z);
	arc4(xecc, xecc_z);
	arc4(lsto, lsto_z);
	arc4(tst1, tst1_z);
	 key(tst1, tst1_z);
	arc4(chk1, chk1_z);
	if ((chk1_z != tst1_z) || memcmp(tst1, chk1, tst1_z))
		return tst1;
	arc4(msg2, msg2_z);
	if (ret < 0)
		return msg2;
	varg = (char **)calloc(argc + 10, sizeof(char *));
	if (!varg)
		return 0;
	if (ret) {
		arc4(rlax, rlax_z);
		if (!rlax[0] && key_with_file(shll))
			return shll;
		arc4(opts, opts_z);
#if HARDENING
	    arc4_hardrun(text, text_z);
	    exit(0);
       /* Seccomp Sandboxing - Start */
       seccomp_hardening();
#endif
		arc4(text, text_z);
		arc4(tst2, tst2_z);
		 key(tst2, tst2_z);
		arc4(chk2, chk2_z);
		if ((chk2_z != tst2_z) || memcmp(tst2, chk2, tst2_z))
			return tst2;
		/* Prepend hide_z spaces to script text to hide it. */
		scrpt = malloc(hide_z + text_z);
		if (!scrpt)
			return 0;
		memset(scrpt, (int) ' ', hide_z);
		memcpy(&scrpt[hide_z], text, text_z);
	} else {			/* Reexecute */
		if (*xecc) {
			scrpt = malloc(512);
			if (!scrpt)
				return 0;
			sprintf(scrpt, xecc, me);
		} else {
			scrpt = me;
		}
	}
	j = 0;
#if BUSYBOXON
	varg[j++] = "busybox";
	varg[j++] = "sh";
#else
	varg[j++] = argv[0];		/* My own name at execution */
#endif
	if (ret && *opts)
		varg[j++] = opts;	/* Options on 1st line of code */
	if (*inlo)
		varg[j++] = inlo;	/* Option introducing inline code */
	varg[j++] = scrpt;		/* The script itself */
	if (*lsto)
		varg[j++] = lsto;	/* Option meaning last option */
	i = (ret > 1) ? ret : 0;	/* Args numbering correction */
	while (i < argc)
		varg[j++] = argv[i++];	/* Main run-time arguments */
	varg[j] = 0;			/* NULL terminated array */
#if DEBUGEXEC
	debugexec(shll, j, varg);
#endif
	execvp(shll, varg);
	return shll;
}

int main(int argc, char ** argv)
{
#if SETUID
   setuid(0);
#endif
#if DEBUGEXEC
	debugexec("main", argc, argv);
#endif
#if HARDENING
	hardening();
#endif
#if !TRACEABLE
	untraceable(argv[0]);
#endif
	argv[1] = xsh(argc, argv);
	fprintf(stderr, "%s%s%s: %s\n", argv[0],
		errno ? ": " : "",
		errno ? strerror(errno) : "",
		argv[1] ? argv[1] : "<null>"
	);
	return 1;
}
